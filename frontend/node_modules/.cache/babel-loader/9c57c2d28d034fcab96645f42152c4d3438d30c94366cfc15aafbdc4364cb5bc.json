{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspace/AEGT/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useState}from'react';import styled from'styled-components';import{Loader,Zap,DollarSign}from'lucide-react';import{toast}from'react-hot-toast';import useTonConnect from'../hooks/useTonConnect';import{upgradeAPI}from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PaymentContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 16px;\\n  padding: 20px;\\n  background: rgba(255, 255, 255, 0.05);\\n  border-radius: 16px;\\n  border: 1px solid rgba(255, 255, 255, 0.1);\\n\"])));const PaymentOption=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 16px;\\n  background: \",\";\\n  border: 1px solid \",\";\\n  border-radius: 12px;\\n  color: white;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  &:hover {\\n    background: rgba(0, 255, 136, 0.1);\\n    border-color: #00ff88;\\n  }\\n\\n  &:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\"])),props=>props.selected?'rgba(0, 255, 136, 0.1)':'rgba(255, 255, 255, 0.05)',props=>props.selected?'#00ff88':'rgba(255, 255, 255, 0.1)');const PaymentInfo=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n\"])));const PaymentPrice=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  color: #00ff88;\\n\"])));const PayButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 12px;\\n  padding: 16px 24px;\\n  background: linear-gradient(135deg, #00ff88, #00cc66);\\n  color: white;\\n  border: none;\\n  border-radius: 12px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n\\n  &:hover:not(:disabled) {\\n    background: linear-gradient(135deg, #00ff99, #00dd77);\\n    transform: translateY(-2px);\\n  }\\n\\n  &:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n    transform: none;\\n  }\\n\"])));const WalletStatus=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  padding: 12px;\\n  background: rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n  font-size: 14px;\\n  color: rgba(255, 255, 255, 0.7);\\n  text-align: center;\\n\"])));const TonPayment=_ref=>{var _paymentOptions$find,_paymentOptions$find2;let{upgrade,onPaymentSuccess,onPaymentError}=_ref;const{isConnected,walletAddress,connectWallet,sendTransaction}=useTonConnect();const[selectedPayment,setSelectedPayment]=useState('ton');const[isProcessing,setIsProcessing]=useState(false);const paymentOptions=[{id:'aegt',name:'AEGT Tokens',price:upgrade.aegtPrice,currency:'AEGT',icon:/*#__PURE__*/_jsx(Zap,{size:20}),available:true},{id:'ton',name:'TON Cryptocurrency',price:upgrade.tonPrice||upgrade.aegtPrice*0.001,// Convert AEGT to TON\ncurrency:'TON',icon:/*#__PURE__*/_jsx(DollarSign,{size:20}),available:isConnected}];const handlePayment=async()=>{if(selectedPayment==='aegt'){// Handle AEGT payment (existing logic)\ntry{setIsProcessing(true);const response=await upgradeAPI.purchaseUpgrade(upgrade.id,{paymentMethod:'aegt'});if(onPaymentSuccess){onPaymentSuccess(response.data);}toast.success('Upgrade purchased successfully!');}catch(error){console.error('AEGT payment failed:',error);toast.error('Payment failed. Please try again.');if(onPaymentError){onPaymentError(error);}}finally{setIsProcessing(false);}}else if(selectedPayment==='ton'){// Handle TON payment\nif(!isConnected){try{await connectWallet();}catch(error){toast.error('Please connect your wallet first');return;}}try{setIsProcessing(true);const tonAmount=paymentOptions.find(p=>p.id==='ton').price;const tonAmountNano=Math.floor(tonAmount*1000000000);// Convert to nanotons\n// Create transaction\nconst transaction={validUntil:Math.floor(Date.now()/1000)+300,// 5 minutes\nmessages:[{address:process.env.REACT_APP_TON_RECEIVER_ADDRESS||'EQD4FPq-PRDieyQKkizFTRtSDyucUIqrj0v_zXJmqaDp6_0t',amount:tonAmountNano.toString(),payload:\"Aegisum Upgrade: \".concat(upgrade.name,\" (ID: \").concat(upgrade.id,\")\")}]};// Send transaction\nconst result=await sendTransaction(transaction);// Verify payment with backend\nconst response=await upgradeAPI.purchaseUpgrade(upgrade.id,{paymentMethod:'ton',transactionHash:result.boc,walletAddress:walletAddress});if(onPaymentSuccess){onPaymentSuccess(response.data);}toast.success('Upgrade purchased with TON successfully!');}catch(error){console.error('TON payment failed:',error);toast.error('TON payment failed. Please try again.');if(onPaymentError){onPaymentError(error);}}finally{setIsProcessing(false);}}};return/*#__PURE__*/_jsxs(PaymentContainer,{children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 16px 0',color:'white'},children:\"Choose Payment Method\"}),paymentOptions.map(option=>/*#__PURE__*/_jsxs(PaymentOption,{selected:selectedPayment===option.id,disabled:!option.available,onClick:()=>option.available&&setSelectedPayment(option.id),children:[/*#__PURE__*/_jsxs(PaymentInfo,{children:[option.icon,/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:option.name}),!option.available&&option.id==='ton'&&/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'rgba(255, 255, 255, 0.5)'},children:\"Connect wallet to enable\"})]})]}),/*#__PURE__*/_jsxs(PaymentPrice,{children:[option.price.toLocaleString(),\" \",option.currency]})]},option.id)),selectedPayment==='ton'&&!isConnected&&/*#__PURE__*/_jsx(WalletStatus,{children:\"Please connect your TON wallet to pay with cryptocurrency\"}),selectedPayment==='ton'&&isConnected&&/*#__PURE__*/_jsxs(WalletStatus,{children:[\"\\u2705 Wallet connected: \",walletAddress===null||walletAddress===void 0?void 0:walletAddress.slice(0,8),\"...\",walletAddress===null||walletAddress===void 0?void 0:walletAddress.slice(-8)]}),/*#__PURE__*/_jsx(PayButton,{onClick:handlePayment,disabled:isProcessing||selectedPayment==='ton'&&!isConnected,children:isProcessing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{size:20,className:\"animate-spin\"}),\"Processing Payment...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedPayment==='ton'?/*#__PURE__*/_jsx(DollarSign,{size:20}):/*#__PURE__*/_jsx(Zap,{size:20}),\"Pay \",(_paymentOptions$find=paymentOptions.find(p=>p.id===selectedPayment))===null||_paymentOptions$find===void 0?void 0:_paymentOptions$find.price.toLocaleString(),\" \",(_paymentOptions$find2=paymentOptions.find(p=>p.id===selectedPayment))===null||_paymentOptions$find2===void 0?void 0:_paymentOptions$find2.currency]})})]});};export default TonPayment;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}